<?php

namespace Proxies\__CG__\Armd\ResourceBundle\Entity\Guide;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Guide extends \Armd\ResourceBundle\Entity\Guide\Guide implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'title', 'identifier', 'image', 'category', 'description', 'position', 'duration', 'startText', 'endText', 'items', 'version', 'filesize', 'etag');
        }

        return array('__isInitialized__', 'id', 'title', 'identifier', 'image', 'category', 'description', 'position', 'duration', 'startText', 'endText', 'items', 'version', 'filesize', 'etag');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Guide $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentifier($identifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentifier', array($identifier));

        return parent::setIdentifier($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifier', array());

        return parent::getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', array($position));

        return parent::setPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosition', array());

        return parent::getPosition();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuration($duration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuration', array($duration));

        return parent::setDuration($duration);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', array());

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartText($startText)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartText', array($startText));

        return parent::setStartText($startText);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartText', array());

        return parent::getStartText();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndText($endText)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndText', array($endText));

        return parent::setEndText($endText);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndText', array());

        return parent::getEndText();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(\Armd\ResourceBundle\Entity\Media\Media $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', array($image));

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\Armd\ResourceBundle\Entity\Guide\GuideCategory $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function getItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItems', array());

        return parent::getItems();
    }

    /**
     * {@inheritDoc}
     */
    public function addItem(\Armd\ResourceBundle\Entity\Guide\GuideItem $item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addItem', array($item));

        return parent::addItem($item);
    }

    /**
     * {@inheritDoc}
     */
    public function setItems(\Doctrine\Common\Collections\ArrayCollection $items)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItems', array($items));

        return parent::setItems($items);
    }

    /**
     * {@inheritDoc}
     */
    public function removeItem(\Armd\ResourceBundle\Entity\Guide\GuideItem $item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeItem', array($item));

        return parent::removeItem($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion($version)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', array($version));

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getFilesize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilesize', array());

        return parent::getFilesize();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilesize($size)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilesize', array($size));

        return parent::setFilesize($size);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtag', array());

        return parent::getEtag();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtag($etag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtag', array($etag));

        return parent::setEtag($etag);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getVirtualCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVirtualCategory', array());

        return parent::getVirtualCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function getVirtualImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVirtualImage', array());

        return parent::getVirtualImage();
    }

    /**
     * {@inheritDoc}
     */
    public function getVirtualItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVirtualItems', array());

        return parent::getVirtualItems();
    }

}
